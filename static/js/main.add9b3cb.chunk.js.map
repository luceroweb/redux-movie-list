{"version":3,"sources":["App.js","redux/actions/movieList.actions.js","services/movieApi.service.js","components/SearchBar.js","components/MovieSearch.js","redux/middleware/logger.js","redux/enhancers/monitorReducerEnhancer.js","redux/reducers/movieList.reducer.js","redux/reducers/index.js","components/Navbar.js","index.js","redux/store.js"],"names":["App","movieList","getMovieList","removeMovieFromList","useEffect","Container","Row","list","map","movie","Col","xs","md","lg","className","Card","Img","variant","src","Poster","alt","Title","Body","Footer","Button","onClick","class","imdbID","connect","state","movieListReducer","type","payload","apiKey","MovieApiService","title","page","axios","get","then","res","data","catch","err","console","error","id","SearchBar","onSearch","useState","setTitle","Form","inline","onSubmit","e","preventDefault","sm","InputGroup","Control","name","placeholder","onChange","target","value","required","MovieSearch","addMovieToList","movieApiService","searchResults","setSearchResults","a","getMoviesByTitle","results","Search","addToMovieList","getMovieById","result","style","maxWidth","logger","store","next","action","group","info","groupEnd","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","localStorage","getItem","JSON","parse","push","setItem","stringify","updatedList","filter","movieFromList","length","removeItem","rootReducer","combineReducers","Navbar","bg","fixed","expand","Brand","href","width","height","Toggle","Collapse","Nav","Link","ReactDOM","render","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composeWithDevTools","configureStore","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.add9b3cb.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMovieList, removeMovieFromList } from './redux/actions/movieList.actions';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet App = ({ movieList, getMovieList, removeMovieFromList  }) => {\r\n\r\n  useEffect(() => {\r\n    getMovieList();\r\n  }, [getMovieList])\r\n\r\n  return (\r\n    <Container>\r\n      <h1>My Movie List</h1>\r\n      <Row>\r\n        {\r\n          movieList && movieList.list && movieList.list.map((movie) => (\r\n            <Col xs={12} md={6} lg={3} key={movie.imdbID} className=\"mb-4\">\r\n              <Card className=\"h-100\">\r\n                <Card.Img variant=\"top\" src={movie.Poster} alt={`${movie.Title} poster`} />\r\n                <Card.Body className=\"pb-0\">\r\n                  <Card.Title>{ movie.Title }</Card.Title>\r\n                </Card.Body>\r\n                <Card.Footer className=\"bg-white border-0 pt-0 pb-3\">\r\n                  <Button \r\n                    variant=\"danger\" \r\n                    onClick={() => removeMovieFromList(movie)}\r\n                  >\r\n                    <i class=\"bi bi-bookmark-dash-fill\"></i>&nbsp;\r\n                    Remove From List\r\n                  </Button>\r\n                </Card.Footer>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieList: state.movieListReducer,\r\n});\r\n\r\nApp = connect(\r\n  mapStateToProps,\r\n  { getMovieList, removeMovieFromList }\r\n)(App)\r\n\r\nexport default App;\r\n","export const getMovieList = () => ( { type: 'GET_MOVIE_LIST' } );\r\nexport const addMovieToList = (payload) => ( { type: 'ADD_MOVIE_TO_LIST', payload: payload } );\r\nexport const removeMovieFromList = (payload) => ( { type: 'REMOVE_MOVIE_FROM_LIST', payload } );","import axios from 'axios';\r\nconst apiKey = '19c7ac68';\r\n\r\nexport default class MovieApiService {\r\n    getMoviesByTitle(title, page = 1) {\r\n        return axios.get(`https://www.omdbapi.com/?s=${title}&page=${page}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    getMovieById(id) {\r\n        return axios.get(`https://www.omdbapi.com/?i=${id}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n}","import { useState } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n    const [title, setTitle] = useState();\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        onSearch(title);\r\n    }\r\n\r\n    return (\r\n        <Form inline onSubmit={onFormSubmit}>\r\n          <Row>\r\n            <Col sm={9}>\r\n              <InputGroup className=\"form-group mb-3\">\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      id=\"movieTitle\"\r\n                      name=\"movieTitle\"\r\n                      placeholder=\"Search for a movie, show, or episode by name...\"\r\n                      onChange={(e) => setTitle(e.target.value)}\r\n                      required\r\n                  />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <Button type=\"submit\" className=\"w-100 mb-3\">Search</Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList } from '../redux/actions/movieList.actions';\r\nimport MovieApiService from '../services/movieApi.service';\r\nimport SearchBar from './SearchBar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from  'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet MovieSearch = ({ addMovieToList }) => {\r\n  const movieApiService = new MovieApiService();\r\n  const [searchResults, setSearchResults] = useState(); \r\n\r\n  const onSearch = async (title) => {\r\n    const results = await movieApiService.getMoviesByTitle(title);\r\n    setSearchResults(results.Search);\r\n  }\r\n\r\n  const addToMovieList = async (id) => {\r\n    const result = await movieApiService.getMovieById(id);\r\n    addMovieToList(result);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBar onSearch={onSearch}/>\r\n      <Row>\r\n        { searchResults \r\n          ? searchResults.map((movie) => (\r\n            <Col xs={12} md={6} lg={3} key={movie.imdbID} className=\"mb-4\">\r\n              <Card className=\"h-100\">\r\n                <Card.Img variant=\"top\" src={movie.Poster} alt={`${movie.Title} poster`} />\r\n                <Card.Body className=\"pb-0\">\r\n                  <Card.Title>{ movie.Title }</Card.Title>\r\n                </Card.Body>\r\n                <Card.Footer className=\"bg-white border-0 pt-0 pb-3\">\r\n                  <Button\r\n                    variant=\"success\"\r\n                    onClick={() => addToMovieList(movie.imdbID)}\r\n                  >\r\n                    <i class=\"bi bi-bookmark-plus\"></i>&nbsp;\r\n                    Add To List\r\n                  </Button>\r\n\r\n                </Card.Footer>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n          : <Col className=\"text-center\">\r\n          <p className=\"text-secondary\">Use the search bar above to begin</p>\r\n          <img src=\"/redux-movie-list/images/popcornPoster.jpg\" alt=\"\" style={{maxWidth:'300px'}} />\r\n        </Col>\r\n        }\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nMovieSearch = connect(\r\n  null,\r\n  { addMovieToList }\r\n)(MovieSearch)\r\n\r\nexport default MovieSearch;","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.groupEnd()\r\n    return result\r\n}\r\n  \r\nexport default logger","const round = number => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer =\r\n  createStore => (reducer, initialState, enhancer) => {\r\n    const monitoredReducer = (state, action) => {\r\n      // const start = performance.now()\r\n      const newState = reducer(state, action)\r\n      // const end = performance.now()\r\n      // const diff = round(end - start)\r\n\r\n      return newState\r\n    }\r\n\r\n    return createStore(monitoredReducer, initialState, enhancer)\r\n  }\r\n\r\nexport default monitorReducerEnhancer","const initialState = null;\r\n\r\nconst movieListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_MOVIE_LIST': {\r\n            const movieList = localStorage.getItem('movieList');\r\n\r\n            return movieList\r\n                ? JSON.parse(movieList)\r\n                : state;\r\n        }\r\n        case 'ADD_MOVIE_TO_LIST': {\r\n          let movieList = localStorage.getItem('movieList');\r\n          if (movieList) {\r\n            movieList = JSON.parse(movieList);\r\n            movieList.list.push(action.payload);\r\n          } else {\r\n            movieList = { list: [ action.payload ]}\r\n          }\r\n\r\n          localStorage.setItem('movieList', JSON.stringify(movieList));\r\n\r\n          return movieList;\r\n        }\r\n        case 'REMOVE_MOVIE_FROM_LIST': {\r\n          let movieList = localStorage.getItem('movieList');\r\n          movieList = JSON.parse(movieList);\r\n          const updatedList = movieList.list.filter((movieFromList) => movieFromList.imdbID !== action.payload.imdbID);\r\n          if(updatedList.length) {\r\n            movieList.list = updatedList;\r\n            localStorage.setItem('movieList', JSON.stringify(movieList));\r\n          } else {\r\n            localStorage.removeItem('movieList');\r\n          }\r\n\r\n          return movieList;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movieListReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport movieListReducer from \"./movieList.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    movieListReducer\r\n});\r\n\r\nexport default rootReducer;","import RBNavbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <RBNavbar bg=\"light\" fixed=\"top\" expand=\"sm\">\r\n          <Container>\r\n            <RBNavbar.Brand href=\"/redux-movie-list/\">\r\n              <img\r\n                src=\"/redux-movie-list/logo192.png\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                alt=\"\"\r\n                className=\"d-inline-block align-top mr-2\"\r\n              />\r\n              Movie Database\r\n            </RBNavbar.Brand>\r\n            <RBNavbar.Toggle />\r\n              <RBNavbar.Collapse>\r\n                <Nav>\r\n                  <Nav.Link href=\"/redux-movie-list/\">Home</Nav.Link>\r\n                  <Nav.Link href=\"/redux-movie-list/movie-list\">Movie List</Nav.Link>\r\n                </Nav>\r\n              </RBNavbar.Collapse>\r\n          </Container>\r\n        </RBNavbar>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport MovieSearch from './components/MovieSearch';\r\n\r\nimport configureStore from './redux/store';\r\nimport Navbar from './components/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Router>\r\n      <Navbar/> \r\n      <Switch>\r\n        <Route exact path=\"/redux-movie-list/\" component={MovieSearch} />\r\n        <Route exact path=\"/redux-movie-list/movie-list\" component={App} />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport loggerMiddleware from './middleware/logger';\r\nimport monitorReducerEnhancer from './enhancers/monitorReducerEnhancer';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [loggerMiddleware, thunkMiddleware];\r\n    const enhancers = [applyMiddleware(...middlewares), monitorReducerEnhancer];\r\n\r\n    return createStore(rootReducer, preloadedState, composeWithDevTools(...enhancers))\r\n}"],"sourceRoot":""}