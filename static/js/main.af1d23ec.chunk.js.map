{"version":3,"sources":["App.js","redux/actions/movieList.actions.js","services/movieApi.service.js","components/SearchBar.js","components/MovieSearch.js","redux/middleware/logger.js","redux/enhancers/monitorReducerEnhancer.js","redux/reducers/movieList.reducer.js","redux/reducers/index.js","components/Navbar.js","index.js","redux/store.js"],"names":["App","movieList","getMovieList","removeMovieFromList","useEffect","list","map","movie","src","Poster","alt","Title","onClick","imdbID","connect","state","movieListReducer","type","payload","apiKey","MovieApiService","title","page","axios","get","then","res","data","catch","err","console","error","id","SearchBar","onSearch","useState","setTitle","onSubmit","e","preventDefault","className","htmlFor","onChange","target","value","MovieSearch","addMovieToList","movieApiService","searchResults","setSearchResults","a","getMoviesByTitle","results","Search","addToMovieList","getMovieById","result","logger","store","next","action","group","info","log","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","start","performance","now","newState","end","diff","Math","round","localStorage","getItem","JSON","parse","push","setItem","stringify","updatedList","filter","movieFromList","length","removeItem","rootReducer","combineReducers","Navbar","bg","Container","Brand","href","Toggle","Collapse","Nav","Link","ReactDOM","render","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composeWithDevTools","configureStore","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.af1d23ec.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getMovieList, removeMovieFromList } from './redux/actions/movieList.actions';\r\n\r\nlet App = ({ movieList, getMovieList, removeMovieFromList  }) => {\r\n\r\n  useEffect(() => {\r\n    getMovieList();\r\n  }, [getMovieList])\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Movie List</h1>\r\n      {\r\n        movieList && movieList.list && movieList.list.map((movie) => (\r\n          <div key={movie.imdbID}>\r\n            <img src={movie.Poster} alt={`${movie.Title} poster`} />\r\n            <h3>{ movie.Title }</h3>\r\n            <button onClick={() => removeMovieFromList(movie)}>Remove From List</button>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieList: state.movieListReducer,\r\n});\r\n\r\nApp = connect(\r\n  mapStateToProps,\r\n  { getMovieList, removeMovieFromList }\r\n)(App)\r\n\r\nexport default App;\r\n","export const getMovieList = () => ( { type: 'GET_MOVIE_LIST' } );\r\nexport const addMovieToList = (payload) => ( { type: 'ADD_MOVIE_TO_LIST', payload: payload } );\r\nexport const removeMovieFromList = (payload) => ( { type: 'REMOVE_MOVIE_FROM_LIST', payload } );","import axios from 'axios';\r\nconst apiKey = '19c7ac68';\r\n\r\nexport default class MovieApiService {\r\n    getMoviesByTitle(title, page = 1) {\r\n        return axios.get(`https://www.omdbapi.com/?s=${title}&page=${page}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    getMovieById(id) {\r\n        return axios.get(`https://www.omdbapi.com/?i=${id}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n}","import { useState } from \"react\";\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n    const [title, setTitle] = useState();\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        onSearch(title);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={(e) => setTitle(e.target.value)}    \r\n                />\r\n            </div>\r\n            <button type=\"submit\">Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList } from '../redux/actions/movieList.actions';\r\nimport MovieApiService from '../services/movieApi.service';\r\nimport SearchBar from './SearchBar';\r\n\r\nlet MovieSearch = ({ addMovieToList }) => {\r\n    const movieApiService = new MovieApiService();\r\n    const [searchResults, setSearchResults] = useState(); \r\n\r\n    const onSearch = async (title) => {\r\n        const results = await movieApiService.getMoviesByTitle(title);\r\n        setSearchResults(results.Search);\r\n    }\r\n\r\n    const addToMovieList = async (id) => {\r\n        const result = await movieApiService.getMovieById(id);\r\n        addMovieToList(result);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SearchBar onSearch={onSearch}/>\r\n            {\r\n                searchResults && searchResults.map((movie) => (\r\n                    <div key={movie.imdbID}>\r\n                        <img src={movie.Poster} alt={`${movie.Title} poster`} />\r\n                        <h3>{ movie.Title }</h3>\r\n                        <button onClick={() => addToMovieList(movie.imdbID)}>Add To List</button>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieSearch = connect(\r\n    null,\r\n    { addMovieToList }\r\n)(MovieSearch)\r\n\r\nexport default MovieSearch;","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n}\r\n  \r\nexport default logger","const round = number => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer =\r\n  createStore => (reducer, initialState, enhancer) => {\r\n    const monitoredReducer = (state, action) => {\r\n      const start = performance.now()\r\n      const newState = reducer(state, action)\r\n      const end = performance.now()\r\n      const diff = round(end - start)\r\n\r\n      console.log('reducer process time:', diff)\r\n\r\n      return newState\r\n    }\r\n\r\n    return createStore(monitoredReducer, initialState, enhancer)\r\n  }\r\n\r\nexport default monitorReducerEnhancer","const initialState = null;\r\n\r\nconst movieListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_MOVIE_LIST': {\r\n            const movieList = localStorage.getItem('movieList');\r\n\r\n            return movieList\r\n                ? JSON.parse(movieList)\r\n                : state;\r\n        }\r\n        case 'ADD_MOVIE_TO_LIST': {\r\n          let movieList = localStorage.getItem('movieList');\r\n          if (movieList) {\r\n            movieList = JSON.parse(movieList);\r\n            movieList.list.push(action.payload);\r\n          } else {\r\n            movieList = { list: [ action.payload ]}\r\n          }\r\n\r\n          localStorage.setItem('movieList', JSON.stringify(movieList));\r\n\r\n          return movieList;\r\n        }\r\n        case 'REMOVE_MOVIE_FROM_LIST': {\r\n          let movieList = localStorage.getItem('movieList');\r\n          movieList = JSON.parse(movieList);\r\n          const updatedList = movieList.list.filter((movieFromList) => movieFromList.imdbID !== action.payload.imdbID);\r\n          if(updatedList.length) {\r\n            movieList.list = updatedList;\r\n            localStorage.setItem('movieList', JSON.stringify(movieList));\r\n          } else {\r\n            localStorage.removeItem('movieList');\r\n          }\r\n\r\n          return movieList;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movieListReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport movieListReducer from \"./movieList.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    movieListReducer\r\n});\r\n\r\nexport default rootReducer;","import RBNavbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <RBNavbar bg=\"light\">\r\n          <Container>\r\n            <RBNavbar.Brand href=\"/\">Movie Database</RBNavbar.Brand>\r\n            <RBNavbar.Toggle />\r\n              <RBNavbar.Collapse>\r\n                <Nav>\r\n                  <Nav.Link href=\"/\">Home</Nav.Link>\r\n                  <Nav.Link href=\"/movie-list\">Movie List</Nav.Link>\r\n                </Nav>\r\n              </RBNavbar.Collapse>\r\n          </Container>\r\n        </RBNavbar>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport MovieSearch from './components/MovieSearch';\r\n\r\nimport configureStore from './redux/store';\r\nimport Navbar from './components/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Router>\r\n      <Navbar/> \r\n      <Switch>\r\n        <Route exact path=\"/\" component={MovieSearch} />\r\n        <Route exact path=\"/movie-list\" component={App} />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport loggerMiddleware from './middleware/logger';\r\nimport monitorReducerEnhancer from './enhancers/monitorReducerEnhancer';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [loggerMiddleware, thunkMiddleware];\r\n    const enhancers = [applyMiddleware(...middlewares), monitorReducerEnhancer];\r\n\r\n    return createStore(rootReducer, preloadedState, composeWithDevTools(...enhancers))\r\n}"],"sourceRoot":""}