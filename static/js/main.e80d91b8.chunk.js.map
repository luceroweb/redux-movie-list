{"version":3,"sources":["components/MovieList.js","redux/actions/movieList.actions.js","services/movieApi.service.js","components/navigation/Pagination.js","components/navigation/SearchBar.js","components/Movies/MovieDetails.js","components/Modal/index.js","components/Movies/MovieCard.js","components/MovieSearchResults.js","redux/middleware/logger.js","redux/enhancers/monitorReducerEnhancer.js","redux/reducers/movieList.reducer.js","redux/reducers/index.js","components/navigation/Navbar.js","index.js","redux/store.js"],"names":["App","movieList","getMovieList","removeMovieFromList","useEffect","Container","Row","list","map","movie","Col","xs","md","lg","className","Card","Img","variant","src","Poster","alt","Title","Body","Footer","Button","onClick","imdbID","href","style","maxWidth","connect","state","movieListReducer","type","payload","apiKey","MovieApiService","title","page","axios","get","then","res","data","catch","err","console","error","id","Pagination","searchResults","currentPage","setCurrentPage","pageCount","totalResults","Math","ceil","pageCountArr","i","push","count","startingPages","slice","firstThreeDots","Ellipsis","disabled","middlePages","max","min","lastThreeDots","endingPages","buildPageList","arr","Item","limitedPageCount","concat","First","Prev","Next","Last","SearchBar","onSearch","setTitle","Form","inline","onSubmit","e","preventDefault","sm","InputGroup","Control","name","placeholder","onChange","target","value","required","MovieDetails","useState","setMovie","movieApiService","a","getMovieById","imdbRating","Rated","Runtime","Genre","Plot","Actors","Modal","modalWrapper","onClose","children","buttons","setTimeout","document","getElementById","classList","add","modalFade","remove","tabIndex","display","ShowCard","selectedMovie","setSelectedMovie","cursor","MovieSearch","addMovieToList","setSearchResults","runSearch","getMoviesByTitle","results","goToPage","addToMovieList","result","Search","index","MovieCard","logger","store","next","action","group","info","groupEnd","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","localStorage","getItem","JSON","parse","setItem","stringify","updatedList","filter","movieFromList","length","removeItem","rootReducer","combineReducers","Navbar","bg","fixed","expand","Brand","width","height","Toggle","Collapse","Nav","Link","ReactDOM","render","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composeWithDevTools","configureStore","exact","path","component","MovieSearchResults","MovieList"],"mappings":"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","file":"static/js/main.e80d91b8.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMovieList, removeMovieFromList } from '../redux/actions/movieList.actions';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet App = ({ movieList, getMovieList, removeMovieFromList  }) => {\r\n\r\n  useEffect(() => {\r\n    getMovieList();\r\n  }, [getMovieList])\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        { movieList\r\n          ? movieList.list.map((movie) => (\r\n            <Col xs={12} md={6} lg={3} key={movie.imdbID} className=\"mb-4\">\r\n              <Card className=\"h-100\">\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={movie.Poster !== 'N/A' ? movie.Poster : '/redux-movie-list/images/popcornPoster.jpg'}\r\n                  alt={`${movie.Title} poster`}\r\n                />\r\n                <Card.Body className=\"pb-0\">\r\n                  <Card.Title>{ movie.Title }</Card.Title>\r\n                </Card.Body>\r\n                <Card.Footer className=\"bg-white border-0 pt-0 pb-3\">\r\n                  <Button \r\n                    variant=\"danger\" \r\n                    onClick={() => removeMovieFromList(movie)}\r\n                  >\r\n                    <i className=\"bi bi-bookmark-dash-fill\"></i>&nbsp;\r\n                    Remove From List\r\n                  </Button>\r\n                </Card.Footer>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n          : <Row>\r\n              <Col className=\"text-center\">\r\n                <p className=\"text-secondary\">\r\n                  You haven't added any movies yet. <br />\r\n                  First <a href=\"/redux-movie-list/\">searh for a movie</a>, then click \"Add To List\".\r\n                </p>\r\n                <img src=\"/redux-movie-list/images/popcornPoster.jpg\" alt=\"\" style={{maxWidth:'300px'}} />\r\n              </Col>\r\n            </Row>\r\n        }\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieList: state.movieListReducer,\r\n});\r\n\r\nApp = connect(\r\n  mapStateToProps,\r\n  { getMovieList, removeMovieFromList }\r\n)(App)\r\n\r\nexport default App;\r\n","export const getMovieList = () => ( { type: 'GET_MOVIE_LIST' } );\r\nexport const addMovieToList = (payload) => ( { type: 'ADD_MOVIE_TO_LIST', payload: payload } );\r\nexport const removeMovieFromList = (payload) => ( { type: 'REMOVE_MOVIE_FROM_LIST', payload } );","import axios from 'axios';\r\nconst apiKey = '19c7ac68';\r\n\r\nexport default class MovieApiService {\r\n    getMoviesByTitle(title, page = 1) {\r\n        return title ? axios.get(`https://www.omdbapi.com/?s=${title}&page=${page}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err))\r\n            : null;\r\n    }\r\n\r\n    getMovieById(id) {\r\n        return axios.get(`https://www.omdbapi.com/?i=${id}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n}","import BSPagination from 'react-bootstrap/Pagination';\r\n\r\nexport const Pagination = ({ searchResults, currentPage, setCurrentPage }) => {\r\n  // convert page count to array\r\n  const pageCount = (searchResults.totalResults) ? Math.ceil(searchResults.totalResults / 10) : [];\r\n  const pageCountArr = [];\r\n  for(let i = 0; i < pageCount; i++){\r\n    pageCountArr.push({ count: i+1 })\r\n  }\r\n\r\n  // Build pagination options\r\n  const startingPages = pageCountArr.slice(0, 2);\r\n\r\n  const firstThreeDots = (currentPage > 3) ? [<BSPagination.Ellipsis disabled key=\"firstThreeDots\" />] : [];\r\n\r\n  const middlePages = (currentPage > 0) ? \r\n    pageCountArr.slice(Math.max(currentPage - 2,2), Math.min(currentPage + 1,pageCount - 2)) \r\n    : [];\r\n\r\n  const lastThreeDots = (currentPage < pageCount-2) ? [<BSPagination.Ellipsis disabled key=\"lastThreeDots\" />] : [];\r\n\r\n  const endingPages = pageCountArr.slice(-2);\r\n\r\n  // Build pagination buttons\r\n  const buildPageList = (arr) => {\r\n    return arr.map(({count}) => (\r\n      <BSPagination.Item\r\n        key={count}\r\n        disabled={count === currentPage}\r\n        onClick={() => setCurrentPage(count)}\r\n      >\r\n        {count}\r\n      </BSPagination.Item>\r\n    ))\r\n  }\r\n\r\n  let limitedPageCount = [].concat(\r\n    buildPageList(startingPages),\r\n    firstThreeDots,\r\n    buildPageList(middlePages),\r\n    lastThreeDots,\r\n    buildPageList(endingPages),\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      { (pageCount > 1) &&\r\n        <BSPagination className=\"justify-content-center\">\r\n          <BSPagination.First key=\"first\" disabled={currentPage === 1} onClick={() => setCurrentPage(1)} />\r\n          <BSPagination.Prev key=\"previous\" disabled={currentPage === 1} onClick={() => setCurrentPage(currentPage - 1)} />\r\n          <BSPagination.Item disabled>Page {currentPage} of {pageCount}</BSPagination.Item>\r\n          <BSPagination.Next key=\"next\" disabled={currentPage === pageCount} onClick={() => setCurrentPage(currentPage + 1)} />\r\n          <BSPagination.Last key=\"last\" disabled={currentPage === pageCount} onClick={() => setCurrentPage(pageCount)} />\r\n        </BSPagination>\r\n      }\r\n      { (pageCount > 1) &&\r\n        <BSPagination className=\"justify-content-center\">\r\n          { pageCount > 7 ? limitedPageCount : buildPageList(pageCountArr) }\r\n        </BSPagination>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst SearchBar = ({ onSearch, setTitle }) => {\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        onSearch();\r\n    }\r\n\r\n    return (\r\n        <Form inline onSubmit={onFormSubmit}>\r\n          <Row>\r\n            <Col sm={9}>\r\n              <InputGroup className=\"form-group mb-3\">\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      id=\"movieTitle\"\r\n                      name=\"movieTitle\"\r\n                      placeholder=\"Search for a movie, show, or episode by name...\"\r\n                      onChange={(e) => setTitle(e.target.value)}\r\n                      required\r\n                  />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <Button type=\"submit\" className=\"w-100 mb-3\">Search</Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React, { useEffect, useState } from 'react';\r\nimport MovieApiService from '../../services/movieApi.service';\r\n\r\nconst MovieDetails = ({ imdbID }) => {\r\n  const [ movie, setMovie ] = useState();\r\n\r\n  useEffect(() => {\r\n    const movieApiService = new MovieApiService();\r\n    const getMovieById = async (imdbID) => {\r\n      const movie = await movieApiService.getMovieById(imdbID);\r\n      setMovie(movie);\r\n    }\r\n    getMovieById(imdbID);\r\n  },[imdbID]);\r\n\r\n  return movie ? (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 text-center\">\r\n        <img\r\n          variant=\"top\"\r\n          src={movie.Poster !== 'N/A' ? movie.Poster : '/redux-movie-list/images/popcornPoster.jpg'}\r\n          alt={`${movie.Title} poster`}\r\n        />\r\n        {(movie.Poster === 'N/A') ? <span className=\"text-secondary\">No poster avaialble</span> : null }\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        { movie.imdbRating !== 'N/A' && <strong className=\"float-end text-primary h4\">{movie.imdbRating}</strong> }\r\n        <h4><strong>{movie.Title}</strong></h4>\r\n        { movie.Rated !== 'N/A' && <span className=\"badge bg-secondary m-1\">{movie.Rated}</span> }\r\n        { movie.Runtime !== 'N/A' && <span className=\"badge bg-secondary m-1\">{movie.Runtime}</span> }\r\n        { movie.Genre !== 'N/A' && <span className=\"badge bg-secondary m-1\">{movie.Genre}</span> }\r\n        { movie.Plot !== 'N/A' && \r\n          <p><strong>Plot</strong><br/>\r\n          {movie.Plot}</p>\r\n        }\r\n        { movie.Actors !== 'N/A' && \r\n          <p><strong>Actors</strong><br/>\r\n          {movie.Actors}</p>\r\n        }\r\n      </div>\r\n    </div>\r\n  ) : (<h2>Loading...</h2>);\r\n}\r\n\r\nexport default MovieDetails;","import React from 'react';\r\n\r\nconst Modal = ({ onClose, children, buttons }) => {\r\n  let modalWrapper;\r\n  \r\n  setTimeout(() => {\r\n    modalWrapper = document.getElementById('exampleModal');\r\n    modalWrapper.classList.add('show');\r\n  }, 500);\r\n\r\n  const modalFade = () => {\r\n    modalWrapper.classList.remove('show');\r\n    setTimeout(() => onClose(), 500);\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" style={{display: 'block'}}>\r\n      <div className=\"modal-dialog modal-lg modal-dialog-scrollable\">\r\n        <div className=\"modal-content p-0\">\r\n          <div className=\"modal-header\">\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={modalFade}></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          {children}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {buttons}\r\n            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={modalFade}>Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import MovieDetails from './MovieDetails';\r\nimport Modal from '../Modal';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst ShowCard = ({ movie, buttons, onClose, selectedMovie, setSelectedMovie }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"h-100\">\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={movie.Poster !== 'N/A' ? movie.Poster : '/redux-movie-list/images/popcornPoster.jpg'}\r\n          alt={`${movie.Title} poster`}\r\n          onClick={() => setSelectedMovie(movie.imdbID)} style={{cursor:'pointer'}}\r\n        />\r\n        <Card.Body className=\"pb-0\">\r\n          <Card.Title>{ movie.Title }</Card.Title>\r\n        </Card.Body>\r\n        <Card.Footer className=\"bg-white border-0 pt-0 pb-3\">\r\n          { buttons }\r\n        </Card.Footer>\r\n      </Card>\r\n      { selectedMovie === movie.imdbID &&\r\n        <Modal\r\n          title={movie.Title}\r\n          onClose={onClose}\r\n          buttons={buttons}\r\n          children={ <MovieDetails imdbID={selectedMovie} /> } \r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowCard;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList } from '../redux/actions/movieList.actions';\r\nimport MovieApiService from '../services/movieApi.service';\r\nimport Pagination from './navigation/Pagination';\r\nimport SearchBar from './navigation/SearchBar';\r\nimport MovieCard from './Movies/MovieCard';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from  'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet MovieSearch = ({ addMovieToList }) => {\r\n  const movieApiService = new MovieApiService();\r\n  const [ searchResults, setSearchResults ] = useState(); \r\n  const [ title, setTitle ] = useState();\r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n  const [ selectedMovie, setSelectedMovie ] = useState(null);\r\n\r\n  const runSearch = async () => {\r\n    const results = await movieApiService.getMoviesByTitle(title,currentPage);\r\n    setSearchResults(results);\r\n  }\r\n\r\n  const onSearch = async () => {\r\n    if(title) {\r\n      setCurrentPage(1);\r\n      return await runSearch();\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const goToPage = async (page) => {\r\n    setCurrentPage(page);\r\n    runSearch();\r\n  }\r\n\r\n  const addToMovieList = async (id) => {\r\n    const result = await movieApiService.getMovieById(id);\r\n    addMovieToList(result);\r\n  }\r\n\r\n  const onClose = () => setSelectedMovie(null);\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBar onSearch={onSearch} setTitle={setTitle} />\r\n        { searchResults\r\n          ? <>\r\n            <Row>\r\n              { searchResults.Search.map((movie,index) => (\r\n                <Col xs={12} md={6} lg={3} key={movie.imdbID} className=\"mb-4\">\r\n                  <MovieCard \r\n                    movie={movie}\r\n                    onClose={onClose}\r\n                    selectedMovie={selectedMovie}\r\n                    setSelectedMovie={setSelectedMovie}\r\n                    key={index}\r\n                    buttons={\r\n                      <Button variant=\"success\" onClick={() => addToMovieList(movie.imdbID)}>\r\n                        <i className=\"bi bi-bookmark-plus\"></i>&nbsp;\r\n                        Add To List\r\n                      </Button>\r\n                    }\r\n                  />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Pagination searchResults={searchResults} currentPage={currentPage} setCurrentPage={goToPage} />\r\n              </Col>\r\n            </Row>\r\n          </>\r\n          : <Row>\r\n              <Col className=\"text-center\">\r\n              <p className=\"text-secondary\">Use the search bar above to begin</p>\r\n              <img src=\"/redux-movie-list/images/popcornPoster.jpg\" alt=\"\" style={{maxWidth:'300px'}} />\r\n            </Col>\r\n          </Row>\r\n        }\r\n    </Container>\r\n  )\r\n}\r\n\r\nMovieSearch = connect(\r\n  null,\r\n  { addMovieToList }\r\n)(MovieSearch)\r\n\r\nexport default MovieSearch;","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.groupEnd()\r\n    return result\r\n}\r\n  \r\nexport default logger","// const round = number => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer =\r\n  createStore => (reducer, initialState, enhancer) => {\r\n    const monitoredReducer = (state, action) => {\r\n      // const start = performance.now()\r\n      const newState = reducer(state, action)\r\n      // const end = performance.now()\r\n      // const diff = round(end - start)\r\n\r\n      return newState\r\n    }\r\n\r\n    return createStore(monitoredReducer, initialState, enhancer)\r\n  }\r\n\r\nexport default monitorReducerEnhancer","const initialState = null;\r\n\r\nconst movieListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_MOVIE_LIST': {\r\n            const movieList = localStorage.getItem('movieList');\r\n\r\n            return movieList\r\n                ? JSON.parse(movieList)\r\n                : state;\r\n        }\r\n        case 'ADD_MOVIE_TO_LIST': {\r\n          let movieList = localStorage.getItem('movieList');\r\n          if (movieList) {\r\n            movieList = JSON.parse(movieList);\r\n            movieList.list.push(action.payload);\r\n          } else {\r\n            movieList = { list: [ action.payload ]}\r\n          }\r\n\r\n          localStorage.setItem('movieList', JSON.stringify(movieList));\r\n\r\n          return movieList;\r\n        }\r\n        case 'REMOVE_MOVIE_FROM_LIST': {\r\n          let movieList = localStorage.getItem('movieList');\r\n          movieList = JSON.parse(movieList);\r\n          const updatedList = movieList.list.filter((movieFromList) => movieFromList.imdbID !== action.payload.imdbID);\r\n          if(updatedList.length) {\r\n            movieList.list = updatedList;\r\n            localStorage.setItem('movieList', JSON.stringify(movieList));\r\n          } else {\r\n            localStorage.removeItem('movieList');\r\n          }\r\n\r\n          return movieList;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movieListReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport movieListReducer from \"./movieList.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    movieListReducer\r\n});\r\n\r\nexport default rootReducer;","import RBNavbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <RBNavbar bg=\"light\" fixed=\"top\" expand=\"sm\">\r\n          <Container>\r\n            <RBNavbar.Brand href=\"/redux-movie-list/\">\r\n              <img\r\n                src=\"/redux-movie-list/logo192.png\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                alt=\"\"\r\n                className=\"d-inline-block align-top mr-2\"\r\n              />\r\n              Movie Database\r\n            </RBNavbar.Brand>\r\n            <RBNavbar.Toggle />\r\n              <RBNavbar.Collapse>\r\n                <Nav>\r\n                  <Nav.Link href=\"/redux-movie-list/\">Home</Nav.Link>\r\n                  <Nav.Link href=\"/redux-movie-list/movie-list\">Movie List</Nav.Link>\r\n                </Nav>\r\n              </RBNavbar.Collapse>\r\n          </Container>\r\n        </RBNavbar>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport MovieList from './components/MovieList';\r\nimport MovieSearchResults from './components/MovieSearchResults';\r\n\r\nimport configureStore from './redux/store';\r\nimport Navbar from './components/navigation/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Router>\r\n      <Navbar/> \r\n      <Switch>\r\n        <Route exact path=\"/redux-movie-list/\" component={MovieSearchResults} />\r\n        <Route exact path=\"/redux-movie-list/movie-list\" component={MovieList} />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport loggerMiddleware from './middleware/logger';\r\nimport monitorReducerEnhancer from './enhancers/monitorReducerEnhancer';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [loggerMiddleware, thunkMiddleware];\r\n    const enhancers = [applyMiddleware(...middlewares), monitorReducerEnhancer];\r\n\r\n    return createStore(rootReducer, preloadedState, composeWithDevTools(...enhancers))\r\n}"],"sourceRoot":""}